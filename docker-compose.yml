version: '2'
services:
  # a client is the routing service for the server (nginx routing everything non-existent to the php-fpm)
  # this service is also used for testing http based subsystems
  client:
    image: nginx:latest
    ports:
      - 80:80
    working_dir: /client
    volumes:
      - ./client:/client
      - ./.storage/assets:/client/.assets
      - ./.docker/client.nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - client-server-network
    depends_on:
      - client-server

  # the client server mapping provides direct access to php engine, there are no static files, so everything is routed
  # directly into php; this service should not be called directly; only by a client
  client-server:
    image: nginx:latest
    ports:
      - 32768:80
    volumes:
      - ./.docker/client-server.nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - client-server-network
      - server-network
    depends_on:
      - server

  # just fast-cgi php engine; server side implementation
  server:
    build:
      context: ./
      dockerfile: ./.docker/server/Dockerfile
    working_dir: /server
    environment:
      - "HOST_IP=${HOST_IP}"
    volumes:
      - .:/server
      - ./.storage/assets:/server/.assets
      - ./.storage/storage:/server/.storage
      - ./logs:/server/logs
      - ./temp:/server/temp
      - ./cache:/server/cache
      - ./.docker/server/xdebug.ini:/etc/php/7.1/fpm/conf.d/21-xdebug-custom.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/10-opcache.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-apcu.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-apcu_bc.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-ftp.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-gettext.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-sysvmsg.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-sysvsem.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-sysvshm.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-wddx.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-xmlreader.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-xmlwriter.ini
      - ./.docker/server/mod-disable.ini:/etc/php/7.1/fpm/conf.d/20-readline.ini
    networks:
      - server-network
      - redis-network
      - neo4j-network
      - mysql-network
      - postgres-network
    depends_on:
      - redis
      - neo4j
      - postgres
      - mysql

  redis:
    image: redis:alpine
    volumes:
      - ./.storage/redis:/data
    networks:
      - redis-network

  neo4j:
    image: neo4j:3.2
    volumes:
      - ./.storage/neo4j:/data
    environment:
      - NEO4J_AUTH=none
    ports:
      - 17474:7474
      - 17473:7473
      - 17687:7687
    networks:
      - neo4j-network

  mysql:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: edde
      MYSQL_USER: edde
      MYSQL_PASSWORD: edde
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - mysql-network

  postgres:
    image: postgres:latest
    environment:
            POSTGRES_USER: edde
            POSTGRES_PASSWORD: edde
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - postgres-network

  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - mysql-network
      - postgres-network

volumes:
  mysql:
    driver: local
  postgres:
    driver: local

networks:
  server-network:
    driver: bridge
  client-server-network:
    driver: bridge
  redis-network:
    driver: bridge
  neo4j-network:
    driver: bridge
  mysql-network:
    driver: bridge
  postgres-network:
    driver: bridge
